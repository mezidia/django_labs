{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Medivac documentation For full documentation visit repository page . To see how to use our app, go to the next page. To see how to work with databases go to the last page. Flask Overview How to start Pages SQLAlchemy Overview Models Query","title":"Home"},{"location":"#welcome-to-medivac-documentation","text":"For full documentation visit repository page . To see how to use our app, go to the next page. To see how to work with databases go to the last page.","title":"Welcome to Medivac documentation"},{"location":"#flask","text":"Overview How to start Pages","title":"Flask"},{"location":"#sqlalchemy","text":"Overview Models Query","title":"SQLAlchemy"},{"location":"alchemy/","text":"SQLAlchemy Overview SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL. It provides a full suite of well known enterprise-level persistence patterns, designed for efficient and high-performing database access, adapted into a simple and Pythonic domain language. Models We developed our models of tables: class Flight ( db . Model ): id = db . Column ( db . Integer , primary_key = True ) plane = db . Column ( db . String ( 200 ), nullable = False ) destination_from = db . Column ( db . String ( 200 ), default = '\u041b\u043e\u0441 \u0421\u0430\u043d\u0442\u043e\u0441' ) destination_to = db . Column ( db . String ( 200 ), default = '\u0421\u0430\u043d \u0424\u0456\u0435\u0440\u0440\u043e' ) flight_created = db . Column ( db . DateTime , default = datetime . utcnow ()) departure_date = db . Column ( db . String ( 200 )) arrival_date = db . Column ( db . String ( 200 )) duration = db . Column ( db . String ( 200 )) price = db . Column ( db . Float ) def __repr__ ( self ): return f '<Flight { self . id } >' Query Since our task was not to use ORM , not many methods have been written, but there is one: Get all flights available_flights = Flight . query . order_by ( Flight . flight_created ) . all () Get a single flight founded_flight = Flight . query . get_or_404 ( id )","title":"SQLAlchemy"},{"location":"alchemy/#sqlalchemy","text":"","title":"SQLAlchemy"},{"location":"alchemy/#overview","text":"SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL. It provides a full suite of well known enterprise-level persistence patterns, designed for efficient and high-performing database access, adapted into a simple and Pythonic domain language.","title":"Overview"},{"location":"alchemy/#models","text":"We developed our models of tables: class Flight ( db . Model ): id = db . Column ( db . Integer , primary_key = True ) plane = db . Column ( db . String ( 200 ), nullable = False ) destination_from = db . Column ( db . String ( 200 ), default = '\u041b\u043e\u0441 \u0421\u0430\u043d\u0442\u043e\u0441' ) destination_to = db . Column ( db . String ( 200 ), default = '\u0421\u0430\u043d \u0424\u0456\u0435\u0440\u0440\u043e' ) flight_created = db . Column ( db . DateTime , default = datetime . utcnow ()) departure_date = db . Column ( db . String ( 200 )) arrival_date = db . Column ( db . String ( 200 )) duration = db . Column ( db . String ( 200 )) price = db . Column ( db . Float ) def __repr__ ( self ): return f '<Flight { self . id } >'","title":"Models"},{"location":"alchemy/#query","text":"Since our task was not to use ORM , not many methods have been written, but there is one:","title":"Query"},{"location":"alchemy/#get-all-flights","text":"available_flights = Flight . query . order_by ( Flight . flight_created ) . all ()","title":"Get all flights"},{"location":"alchemy/#get-a-single-flight","text":"founded_flight = Flight . query . get_or_404 ( id )","title":"Get a single flight"},{"location":"flask/","text":"Flask app Overview Flask is a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries. It has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions. However, Flask supports extensions that can add application features as if they were implemented in Flask itself. Extensions exist for object-relational mappers, form validation, upload handling, various open authentication technologies and several common framework related tools. How to start First launch the script by the command in terminal: python app.py You will see output like this: FLASK_APP = app.py FLASK_ENV = development FLASK_DEBUG = 0 In folder C:/Users/Maxim/Desktop/Projects/medivac C: \\U sers \\M axim \\D esktop \\P rojects \\m edivac \\v env \\S cripts \\p ython.exe -m flask run * Serving Flask app 'app.py' ( lazy loading ) * Environment: development * Debug mode: off C: \\U sers \\M axim \\D esktop \\P rojects \\m edivac \\v env \\l ib \\s ite-packages \\f lask_sqlalchemy \\_ _init__.py:872: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future. Set it to True or False to suppress this warning. warnings.warn ( FSADeprecationWarning ( * Running on http://127.0.0.1:5000/ ( Press CTRL+C to quit ) Open the http://127.0.0.1:5000/ in your browser To set the database, import from the app db and run the command db.create_all() Pages Index Here you can navigate to the other pages by following links, read information about our services etc.: About It is the simple page, where you can read more about our company: Contacts Here you can contact with the administrator of the site and ask some questions: Flight On this page you can get all information about single flight: Flights It is the page with the all available flights at the moment: Base.html It is a template from which all pages are inherited. <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < link href = \"{{ url_for('static', filename='css/bootstrap.css') }}\" rel = \"stylesheet\" > < title > {% block title %}Medivac{% endblock %} </ title > {% block head %}{% endblock %} </ head > < body > {% include 'navbar.html' %} {% block body %}{% endblock %} < script src = \"https://getbootstrap.com/docs/5.1/dist/js/bootstrap.bundle.min.js\" ></ script > </ body > </ html > Navbar.html It's just a navbar of our site. < header > < nav class = \"navbar navbar-expand-md navbar-dark fixed-top bg-dark\" > < div class = \"container-fluid\" > < a class = \"navbar-brand\" href = \"https://github.com/mezidia/medivac\" target = \"_blank\" > \u041c\u0435\u0434\u0456\u0432\u0430\u043a </ a > < button class = \"navbar-toggler\" type = \"button\" data-bs-toggle = \"collapse\" data-bs-target = \"#navbarCollapse\" aria-controls = \"navbarCollapse\" aria-expanded = \"false\" aria-label = \"Toggle navigation\" > < span class = \"navbar-toggler-icon\" ></ span > </ button > < div class = \"collapse navbar-collapse\" id = \"navbarCollapse\" > < ul class = \"navbar-nav me-auto mb-2 mb-md-0\" > < li class = \"nav-item\" > < a class = \"nav-link active\" aria-current = \"page\" href = \"/\" > \u0414\u043e\u043c\u0430\u0448\u043d\u044f \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0430 </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"/flights\" > \u0423\u0441\u0456 \u043f\u043e\u043b\u044c\u043e\u0442\u0438 </ a > </ li > </ ul > </ div > </ div > </ nav > </ header > Code of the app The full length of the app is near 50 lines , so it is better to watch the code at GitHub .","title":"Flask"},{"location":"flask/#flask-app","text":"","title":"Flask app"},{"location":"flask/#overview","text":"Flask is a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries. It has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions. However, Flask supports extensions that can add application features as if they were implemented in Flask itself. Extensions exist for object-relational mappers, form validation, upload handling, various open authentication technologies and several common framework related tools.","title":"Overview"},{"location":"flask/#how-to-start","text":"First launch the script by the command in terminal: python app.py You will see output like this: FLASK_APP = app.py FLASK_ENV = development FLASK_DEBUG = 0 In folder C:/Users/Maxim/Desktop/Projects/medivac C: \\U sers \\M axim \\D esktop \\P rojects \\m edivac \\v env \\S cripts \\p ython.exe -m flask run * Serving Flask app 'app.py' ( lazy loading ) * Environment: development * Debug mode: off C: \\U sers \\M axim \\D esktop \\P rojects \\m edivac \\v env \\l ib \\s ite-packages \\f lask_sqlalchemy \\_ _init__.py:872: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future. Set it to True or False to suppress this warning. warnings.warn ( FSADeprecationWarning ( * Running on http://127.0.0.1:5000/ ( Press CTRL+C to quit ) Open the http://127.0.0.1:5000/ in your browser To set the database, import from the app db and run the command db.create_all()","title":"How to start"},{"location":"flask/#pages","text":"","title":"Pages"},{"location":"flask/#index","text":"Here you can navigate to the other pages by following links, read information about our services etc.:","title":"Index"},{"location":"flask/#about","text":"It is the simple page, where you can read more about our company:","title":"About"},{"location":"flask/#contacts","text":"Here you can contact with the administrator of the site and ask some questions:","title":"Contacts"},{"location":"flask/#flight","text":"On this page you can get all information about single flight:","title":"Flight"},{"location":"flask/#flights","text":"It is the page with the all available flights at the moment:","title":"Flights"},{"location":"flask/#basehtml","text":"It is a template from which all pages are inherited. <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < link href = \"{{ url_for('static', filename='css/bootstrap.css') }}\" rel = \"stylesheet\" > < title > {% block title %}Medivac{% endblock %} </ title > {% block head %}{% endblock %} </ head > < body > {% include 'navbar.html' %} {% block body %}{% endblock %} < script src = \"https://getbootstrap.com/docs/5.1/dist/js/bootstrap.bundle.min.js\" ></ script > </ body > </ html >","title":"Base.html"},{"location":"flask/#navbarhtml","text":"It's just a navbar of our site. < header > < nav class = \"navbar navbar-expand-md navbar-dark fixed-top bg-dark\" > < div class = \"container-fluid\" > < a class = \"navbar-brand\" href = \"https://github.com/mezidia/medivac\" target = \"_blank\" > \u041c\u0435\u0434\u0456\u0432\u0430\u043a </ a > < button class = \"navbar-toggler\" type = \"button\" data-bs-toggle = \"collapse\" data-bs-target = \"#navbarCollapse\" aria-controls = \"navbarCollapse\" aria-expanded = \"false\" aria-label = \"Toggle navigation\" > < span class = \"navbar-toggler-icon\" ></ span > </ button > < div class = \"collapse navbar-collapse\" id = \"navbarCollapse\" > < ul class = \"navbar-nav me-auto mb-2 mb-md-0\" > < li class = \"nav-item\" > < a class = \"nav-link active\" aria-current = \"page\" href = \"/\" > \u0414\u043e\u043c\u0430\u0448\u043d\u044f \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0430 </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"/flights\" > \u0423\u0441\u0456 \u043f\u043e\u043b\u044c\u043e\u0442\u0438 </ a > </ li > </ ul > </ div > </ div > </ nav > </ header >","title":"Navbar.html"},{"location":"flask/#code-of-the-app","text":"The full length of the app is near 50 lines , so it is better to watch the code at GitHub .","title":"Code of the app"}]}