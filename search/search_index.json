{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Medivac documentation For full documentation visit repository page . To see how to use our app, go to the next page. To see how to work with databases go to the last page. Django Overview How to start Pages Django ORM Overview Models Query","title":"Home"},{"location":"#welcome-to-medivac-documentation","text":"For full documentation visit repository page . To see how to use our app, go to the next page. To see how to work with databases go to the last page.","title":"Welcome to Medivac documentation"},{"location":"#django","text":"Overview How to start Pages","title":"Django"},{"location":"#django-orm","text":"Overview Models Query","title":"Django ORM"},{"location":"django/","text":"Django app Overview Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It\u2019s free and open source. How to start First launch the script by the command in terminal: python manage.py runserver You will see output like this: Watching for file changes with StatReloader Performing system checks... System check identified no issues ( 0 silenced ) . November 30 , 2021 - 15 :56:00 Django version 3 .2.9, using settings 'medivac.settings' Starting development server at http://127.0.0.1:8000/ Quit the server with CTRL-BREAK. Open the http://127.0.0.1:8000/ in your browser To set the database, run the command python manage.py migrate Pages Index Here you can navigate to the other pages by following links, read information about our services etc.: About It is the simple page, where you can read more about our company: Contacts Here you can contact with the administrator of the site and ask some questions: Flight On this page you can get all information about single flight: Flights It is the page with the all available flights at the moment: Base.html It is a template from which all pages are inherited. {% load static %} <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < link href = \"{% static 'css/bootstrap.css' %}\" rel = \"stylesheet\" > < title > {% block title %}\u041c\u0435\u0434\u0456\u0432\u0430\u043a{% endblock %} </ title > {% block head %}{% endblock %} </ head > < body > {% include 'includes/navbar.html' %} {% block body %}{% endblock %} < script src = \"https://getbootstrap.com/docs/5.1/dist/js/bootstrap.bundle.min.js\" ></ script > </ body > </ html > Navbar.html It's just a navbar of our site. < header > < nav class = \"navbar navbar-expand-md navbar-dark fixed-top bg-dark\" > < div class = \"container-fluid\" > < a class = \"navbar-brand\" href = \"https://github.com/mezidia/medivac\" target = \"_blank\" > \u041c\u0435\u0434\u0456\u0432\u0430\u043a </ a > < button class = \"navbar-toggler\" type = \"button\" data-bs-toggle = \"collapse\" data-bs-target = \"#navbarCollapse\" aria-controls = \"navbarCollapse\" aria-expanded = \"false\" aria-label = \"Toggle navigation\" > < span class = \"navbar-toggler-icon\" ></ span > </ button > < div class = \"collapse navbar-collapse\" id = \"navbarCollapse\" > < ul class = \"navbar-nav me-auto mb-2 mb-md-0\" > < li class = \"nav-item\" > < a class = \"nav-link active\" aria-current = \"page\" href = \"{% url 'index' %}\" > \u0414\u043e\u043c\u0430\u0448\u043d\u044f \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0430 </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"{% url 'flights' %}\" > \u0423\u0441\u0456 \u043f\u043e\u043b\u044c\u043e\u0442\u0438 </ a > </ li > </ ul > </ div > </ div > </ nav > </ header >","title":"Django"},{"location":"django/#django-app","text":"","title":"Django app"},{"location":"django/#overview","text":"Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It\u2019s free and open source.","title":"Overview"},{"location":"django/#how-to-start","text":"First launch the script by the command in terminal: python manage.py runserver You will see output like this: Watching for file changes with StatReloader Performing system checks... System check identified no issues ( 0 silenced ) . November 30 , 2021 - 15 :56:00 Django version 3 .2.9, using settings 'medivac.settings' Starting development server at http://127.0.0.1:8000/ Quit the server with CTRL-BREAK. Open the http://127.0.0.1:8000/ in your browser To set the database, run the command python manage.py migrate","title":"How to start"},{"location":"django/#pages","text":"","title":"Pages"},{"location":"django/#index","text":"Here you can navigate to the other pages by following links, read information about our services etc.:","title":"Index"},{"location":"django/#about","text":"It is the simple page, where you can read more about our company:","title":"About"},{"location":"django/#contacts","text":"Here you can contact with the administrator of the site and ask some questions:","title":"Contacts"},{"location":"django/#flight","text":"On this page you can get all information about single flight:","title":"Flight"},{"location":"django/#flights","text":"It is the page with the all available flights at the moment:","title":"Flights"},{"location":"django/#basehtml","text":"It is a template from which all pages are inherited. {% load static %} <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < link href = \"{% static 'css/bootstrap.css' %}\" rel = \"stylesheet\" > < title > {% block title %}\u041c\u0435\u0434\u0456\u0432\u0430\u043a{% endblock %} </ title > {% block head %}{% endblock %} </ head > < body > {% include 'includes/navbar.html' %} {% block body %}{% endblock %} < script src = \"https://getbootstrap.com/docs/5.1/dist/js/bootstrap.bundle.min.js\" ></ script > </ body > </ html >","title":"Base.html"},{"location":"django/#navbarhtml","text":"It's just a navbar of our site. < header > < nav class = \"navbar navbar-expand-md navbar-dark fixed-top bg-dark\" > < div class = \"container-fluid\" > < a class = \"navbar-brand\" href = \"https://github.com/mezidia/medivac\" target = \"_blank\" > \u041c\u0435\u0434\u0456\u0432\u0430\u043a </ a > < button class = \"navbar-toggler\" type = \"button\" data-bs-toggle = \"collapse\" data-bs-target = \"#navbarCollapse\" aria-controls = \"navbarCollapse\" aria-expanded = \"false\" aria-label = \"Toggle navigation\" > < span class = \"navbar-toggler-icon\" ></ span > </ button > < div class = \"collapse navbar-collapse\" id = \"navbarCollapse\" > < ul class = \"navbar-nav me-auto mb-2 mb-md-0\" > < li class = \"nav-item\" > < a class = \"nav-link active\" aria-current = \"page\" href = \"{% url 'index' %}\" > \u0414\u043e\u043c\u0430\u0448\u043d\u044f \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0430 </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"{% url 'flights' %}\" > \u0423\u0441\u0456 \u043f\u043e\u043b\u044c\u043e\u0442\u0438 </ a > </ li > </ ul > </ div > </ div > </ nav > </ header >","title":"Navbar.html"},{"location":"orm/","text":"SQLAlchemy Overview Once you\u2019ve created your data models, Django automatically gives you a database-abstraction API that lets you create, retrieve, update and delete objects. This document explains how to use this API. Refer to the data model reference for full details of all the various model lookup options. Models We developed our models of tables: from django.db import models class Flight ( models . Model ): plane = models . CharField ( max_length = 200 , null = False ) destination_from = models . CharField ( max_length = 200 , default = '\u041b\u043e\u0441 \u0421\u0430\u043d\u0442\u043e\u0441' ) destination_to = models . CharField ( max_length = 200 , default = '\u0421\u0430\u043d \u0424\u0456\u0435\u0440\u0440\u043e' ) flight_created = models . DateTimeField ( auto_now_add = True ) departure_date = models . CharField ( max_length = 200 ) arrival_date = models . CharField ( max_length = 200 ) duration = models . CharField ( max_length = 200 ) price = models . FloatField () def __str__ ( self ): return f ' { self . destination_from } - { self . destination_to } ' Query Since our task was not to use ORM , not many methods have been written, but there is one: Get all flights flights_data = Flight . objects . all () . order_by ( '-flight_created' ) Get a single flight flight_object = Flight . objects . get ( pk = id )","title":"Django ORM"},{"location":"orm/#sqlalchemy","text":"","title":"SQLAlchemy"},{"location":"orm/#overview","text":"Once you\u2019ve created your data models, Django automatically gives you a database-abstraction API that lets you create, retrieve, update and delete objects. This document explains how to use this API. Refer to the data model reference for full details of all the various model lookup options.","title":"Overview"},{"location":"orm/#models","text":"We developed our models of tables: from django.db import models class Flight ( models . Model ): plane = models . CharField ( max_length = 200 , null = False ) destination_from = models . CharField ( max_length = 200 , default = '\u041b\u043e\u0441 \u0421\u0430\u043d\u0442\u043e\u0441' ) destination_to = models . CharField ( max_length = 200 , default = '\u0421\u0430\u043d \u0424\u0456\u0435\u0440\u0440\u043e' ) flight_created = models . DateTimeField ( auto_now_add = True ) departure_date = models . CharField ( max_length = 200 ) arrival_date = models . CharField ( max_length = 200 ) duration = models . CharField ( max_length = 200 ) price = models . FloatField () def __str__ ( self ): return f ' { self . destination_from } - { self . destination_to } '","title":"Models"},{"location":"orm/#query","text":"Since our task was not to use ORM , not many methods have been written, but there is one:","title":"Query"},{"location":"orm/#get-all-flights","text":"flights_data = Flight . objects . all () . order_by ( '-flight_created' )","title":"Get all flights"},{"location":"orm/#get-a-single-flight","text":"flight_object = Flight . objects . get ( pk = id )","title":"Get a single flight"}]}